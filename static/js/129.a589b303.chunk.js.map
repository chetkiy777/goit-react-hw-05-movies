{"version":3,"file":"static/js/129.a589b303.chunk.js","mappings":"sOAEMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,iCAGEC,EAAb,WAGE,cAAe,oBAFfC,QAAU,mCAGRC,KAAKC,KAAO,EAJhB,4CAgBE,WACED,KAAKC,MAAQ,IAjBjB,uBAoBE,WACED,KAAKC,KAAO,IArBhB,iEAwBE,8FACeN,EACVO,IADU,uCAC0BF,KAAKD,UACzCI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WAC/BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAJhC,wFAxBF,oHA+BE,WAAoBG,GAApB,iFACehB,EACVO,IADU,gCACmBF,KAAKD,QADxB,kBACyCY,EADzC,gCAEVR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WAC/BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAJhC,wFA/BF,sHAsCE,WAAqBI,GAArB,0FACSjB,EACJO,IADI,iBACUU,EADV,oBACwBZ,KAAKD,UACjCI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAJhC,gDAtCF,sHA6CE,WAAqBI,GAArB,iFACejB,EACVO,IADU,iBACIU,EADJ,4BAC0BZ,KAAKD,UACzCI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WAC/BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAJhC,wFA7CF,qHAoDE,WAAoBI,GAApB,iFACejB,EACVO,IADU,iBACIU,EADJ,4BAC0BZ,KAAKD,UACzCI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKQ,QAC/BN,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAJhC,wFApDF,+D,qQCJaM,EAAOC,EAAAA,EAAAA,GAAH,gGAKJC,EAAYD,EAAAA,EAAAA,IAAH,mGAOTE,EAAaF,EAAAA,EAAAA,IAAH,8JAWVG,EAAaH,EAAAA,EAAAA,EAAH,8CAIVI,EAAgBJ,EAAAA,EAAAA,IAAH,6IAUbK,EAAsBL,EAAAA,EAAAA,IAAH,yNAWnBM,EAAgBN,EAAAA,EAAAA,IAAH,mHAObO,EAAgBP,EAAAA,EAAAA,GAAH,8C,2FCpDpBQ,EAAa,IAAIzB,EAAAA,EAyBvB,UAtBgB,WAEZ,OAA8B0B,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMV,OAJEE,EAAAA,EAAAA,YAAU,WACRN,EAAWO,eAAeC,OAAOJ,IAAUxB,KAAKuB,KAC/C,CAACC,KAEC,SAAC,KAAD,UACIF,EAAUA,EAAQO,KAAI,SAAAC,GAAM,OAEzB,2BACE,UAAC,KAAD,sBAAqBA,EAAOC,WAC5B,uBAAID,EAAOE,YAFJF,EAAOrB,QAKlB","sources":["API/apiService.js","components/pages/Pages.styled.js","components/pages/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport class ApiService {\n  _apiKey = '4a69d9470951ad07e8f0cc655bb46705';\n\n  constructor() {\n    this.page = 1;\n    // this.searchQuery = '';\n  }\n\n  // get query() {\n  //   return this.searchQuery;\n  // }\n\n  // set query(newQuery) {\n  //   this.searchQuery = newQuery;\n  // }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  async getTrendingFilms() {\n    return await instance\n      .get(`/trending/movies/day?api_key=${this._apiKey}`)\n      .then(response => response.data.results)\n      .catch(error => console.log(error));\n  }\n\n  async getFilmByName(searchQuery) {\n    return await instance\n      .get(`/search/movie?api_key=${this._apiKey}&query=${searchQuery}&page=1&include_adult=false`)\n      .then(response => response.data.results)\n      .catch(error => console.log(error));\n  }\n\n  async getFilmDetails(id) {\n    return instance\n      .get(`/movie/${id}?api_key=${this._apiKey}`)\n      .then(response => response.data)\n      .catch(error => console.log(error));\n  }\n\n  async getFilmReviews(id) {\n    return await instance\n      .get(`/movie/${id}/reviews?api_key=${this._apiKey}`)\n      .then(response => response.data.results)\n      .catch(error => console.log(error));\n  }\n\n  async getFilmActors(id) {\n    return await instance\n      .get(`/movie/${id}/credits?api_key=${this._apiKey}`)\n      .then(response => response.data.cast)\n      .catch(error => console.log(error));\n  }\n}\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    max-width: 900px;\n`\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n\n`\n\nexport const ImageThumb = styled.div`\n  display: block;\n  width: 120px;\n  overflow: hidden;\n  margin-bottom: 10px;\n  img {\n    display: block;\n    width: 100%;\n  }\n`\n\nexport const BlockTitle = styled.p`\n  font-weight: bold;\n`\n\nexport const MainInfoBlock = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    \n    img {\n        width: 200px;\n    }\n`\n\nexport const AdditionalInfoBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-top: 3px solid lightgray;\n  border-bottom:  3px solid lightgray;\n  margin-top: 5px;\n  padding-top: 10px;\n  padding-bottom: 3px;\n    \n`\n\nexport const AboutFilmInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  margin-bottom: 10px;\n`\n\nexport const MovieListItem = styled.li`\n  margin-top: 10px;\n`\n\n\n","import {List} from './Pages.styled';\nimport { useParams } from 'react-router-dom';\nimport { BlockTitle } from './Pages.styled';\nimport {useState, useEffect} from 'react';\nimport { ApiService } from 'API/apiService';\nconst apiService = new ApiService();\n\n\nconst Reviews = () => {\n\n    const [reviews, setReviews] = useState(null)\n    const { movieId } = useParams();\n    \n    useEffect(() => {\n      apiService.getFilmReviews(Number(movieId)).then(setReviews);\n    }, [movieId]);\n\n  return <List>\n            {reviews ? reviews.map(review => \n              \n                <li key={review.id}>\n                  <BlockTitle>author: {review.author}</BlockTitle>\n                  <p>{review.content}</p>\n                </li>\n            )\n            : <span> We don't have any reviews for this movie </span>\n          }\n         </List>\n    };\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","ApiService","_apiKey","this","page","get","then","response","data","results","catch","error","console","log","searchQuery","id","cast","List","styled","Container","ImageThumb","BlockTitle","MainInfoBlock","AdditionalInfoBlock","AboutFilmInfo","MovieListItem","apiService","useState","reviews","setReviews","movieId","useParams","useEffect","getFilmReviews","Number","map","review","author","content"],"sourceRoot":""}